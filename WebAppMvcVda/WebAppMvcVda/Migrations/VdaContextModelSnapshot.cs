// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppMvcVda.Contexts;

namespace WebAppMvcVda.Migrations
{
    [DbContext(typeof(VdaContext))]
    partial class VdaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAppMvcVda.ClassLibrary.Documentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AdministradorId");

                    b.Property<int?>("AndeiroId");

                    b.Property<int?>("FornecedorId");

                    b.Property<string>("NumDoc")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoDoc")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.HasIndex("AndeiroId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("WebAppMvcVda.Models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("WebAppMvcVda.Models.Andeiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("Date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Andeiros");
                });

            modelBuilder.Entity("WebAppMvcVda.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("EMotorista");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("WebAppMvcVda.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("FornecedorId");

                    b.Property<decimal>("Valor");

                    b.Property<int?>("ViagemId");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ViagemId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("WebAppMvcVda.Models.Viagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AndeiroId");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("Desejada");

                    b.Property<DateTime>("DtFim")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DtInicio")
                        .HasColumnType("Date");

                    b.Property<bool>("Finalizada");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Realisada");

                    b.HasKey("Id");

                    b.HasIndex("AndeiroId");

                    b.ToTable("Viagens");
                });

            modelBuilder.Entity("WebAppMvcVda.ClassLibrary.Documentos", b =>
                {
                    b.HasOne("WebAppMvcVda.Models.Administrador")
                        .WithMany("Documentos")
                        .HasForeignKey("AdministradorId");

                    b.HasOne("WebAppMvcVda.Models.Andeiro")
                        .WithMany("Documentos")
                        .HasForeignKey("AndeiroId");

                    b.HasOne("WebAppMvcVda.Models.Fornecedor")
                        .WithMany("Documentos")
                        .HasForeignKey("FornecedorId");
                });

            modelBuilder.Entity("WebAppMvcVda.Models.Servico", b =>
                {
                    b.HasOne("WebAppMvcVda.Models.Fornecedor")
                        .WithMany("Servicos")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("WebAppMvcVda.Models.Viagem")
                        .WithMany("ServicosNecessarios")
                        .HasForeignKey("ViagemId");
                });

            modelBuilder.Entity("WebAppMvcVda.Models.Viagem", b =>
                {
                    b.HasOne("WebAppMvcVda.Models.Andeiro")
                        .WithMany("Viagens")
                        .HasForeignKey("AndeiroId");
                });
#pragma warning restore 612, 618
        }
    }
}
